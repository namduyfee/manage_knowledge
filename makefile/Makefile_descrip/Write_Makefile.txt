/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ một folder có nhiều file makefile ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ / 

* mặc định khi gọi make thì nó sẽ tìm file makefile or Makefile để chạy, thế nên khi trong một folder có nhiều file makefile ( Makefile, 
test, gpio ... ) những file makefile đấy có thể có tên được đặt tùy chọn theo người dùng, lúc đó nếu muốn chạy make cho các file makefile có tên
test or gpio thì chúng ta phải gõ: make -f test or make -f gpio trong cmd để thực hiện chạy make cho các file này 

* option  ‘-f name’ or ‘--file=name’ sẽ chỉ định tên makefile được chạy 
	example: make -f gpio
		 make --file=test 

/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ MAKEFILE CONTAIN ~~~~~~~~~~~~~~~~~~~~~~~/ 

* trong một makefile sẽ có thể chứa: 

- explicit rule: rule mà mk phải chỉ định rõ quy tắc, phải viết đầu ra đầu vào rõ ràng, hoàn toàn kiểm soát nó

- implicit rule: rule mà mk không phải chỉ định rõ ràng mọi thứ mà make file sẽ tự ngầm hiểu 

- variable definetion: biến

- directive: có thể hiểu là preprocessor của makefile: include makefile khác, conditional parts, defining multi-line

- #: comment 

- thêm @ trước lệnh sẽ làm cho lệnh không hiện lên trên commandline 
	@echo ("abc")  -> abc
	echo  ("abc")  -> echo ("abc") abc 
	
/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ TÁCH DÒNG ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ / 

* có thể dùng dấu '\' để tách dòng nhưng thực tế chúng vẫn trên một dòng 

* khi chỉ dùng dấu '\' thì dòng trên và dòng dưới sẽ luôn cách nhau bởi một dấu cách khi chúng được đưa lên cùng một dòng 
bên macro của C cũng có tình chất này.

+ example: 	ABC\ 		hay 	ABC \	hay	ABC        \	
		XYZ			XYZ 		XYZ 

- chúng sẽ chỉ luôn được đem về một dạng duy nhất: ABC XYZ 

- nếu muốn bỏ dấu cách đi thì ta thêm $ ở dòng thứ nhất 

+ example: 	ABC$ \	
		XYZ 
-> ABCXYZ 

- nếu muốn hai dòng có thế nối không dấu cách thì $ phải đặt ngay sau và liền với dòng trước không được đặt ABC  $\ như này là không được 
nó sẽ tình luôn dấu cách đặt ở giữa, còn dấu '\' đặt như nào cx được nó cx chỉ quy về 1 dấu cách thôi. 

/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ INCLUDE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ /

* syntax: 
- nếu dùng include ... thì make sẽ báo lỗi khi file include không được tìm thấy 

- nếu dùng sinclude hoặc (-include ...) thì sẽ không báo lỗi khi file include không được tìm thấy và nó sẽ tiếp tục thực hiện lệnh trong file 
make hiện hành 

* Makerfile hiện hành chỉ include được Makefile ở  trong các folder con 

* cứ hiểu là khi có một include thì nó sẽ dán file được include ngay tại vị trí đấy 
- ví dụ a.mk có rule4 rule5, file makefile có rule1 rule2 rule3 và include a.mk 

+ nếu để include tại đâu thì rule4 rule5 sẽ xuất hiện tại đó 
nếu đặt include ở đầu thì makefile sẽ là rule4 rule5 rule 1 rule2 rule3 
nếu đặt include ở sau thì makefile sẽ là rule1 rule2 rule2 rule3 rule4 rule5  
+ và sau đó makefile hoạt động như thường 
-> vậy include chỉ là thay thế nội dung file a.mk tại vị trí mà nó được include ở file thôi ( hoạt động như một include thông thường ) 

* option -I chỉ dẫn đến các file.h khi mã nguồn có các chỉ thị #include file.h 










