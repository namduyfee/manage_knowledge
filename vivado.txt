#include “xgpio.h”
#include “xparameters.h”
#include “xintc.h”

#include “xuartlite.h”
#include “xil_printf.h”

#define ID xparameters.h

XGpio button, led; 
XUartLite uart; 
XUartLite_Config *cf; 
XIntc int_ctrl; 



void btn_interrupt_handler(void* callback_ref) {
	XUart_Acknowledge(&int_ctrl, int_ctrl); 

	XGpio_ClearInt


}



void main () {
	// GPIO 

	initialize(&led, ID) ; 
	initialize(&button, ID) ; 

	SetData(&button, 1, 11); 
	SetData(&led, 1, 00); 
	
	// UART 

	cf = UartLite_LookupConfig(UART_ID); 
	initialize(&uart, cf, 9600); 
	xil_printf("\n\rSodsfsafsa%d, sfsf); 
	// INTERRUPT

	
	microblaze_enbale_interrupt(); 
	XIntc_Initialize(&int_ctrl, ID); 

	XIntc_Connect(&int_ctrl, ID, (XInterruptHandler)fdsafsd, &btn); 

	XIntc_Start(&int_ctrl, XIN_REAL_MODE); 

	XIntc_Enable(&int_ctrl, ID); 

	XGpio_InterruptEnable(&btn, 1); 
	
	XGpio_InterruptGlobalEnable(&btn); 
	
	


}







#include "xgpio.h"

#include "xparameters.h" 

#include "xintc.h"

#include "xuartlite.h"

#include "xil_printf.h"


#define ID


XGpio btn, led; 

XIntc int_ctrl; 

XUartLite uart; 
XUartLite_Config* cf; 

void btn_Interrupt_Handler(void* callback_ref) {

	XUart_Acknowledge(&int_ctrl, ID); 



	XGpio_InterruptClear(&btn, 1); 


}



void main () {

// GPIO 
	XadfIN(&, ID) 
	setdat(&btn, 1, 111); 

// UART 
	
	cf = Uart_LoockUp(ID); 
	initilaze(&uart, cf, 9600); 
	xil_printf("\n\rafdassda%d, ahah);

// INTERRUP 

	microblaze_enable_interrupts(); 
	
	XIntc_initilaze(&, ID); 
	XIntc_Connect(&, ID, (XInterruptHandler), &btn); 

	XIntc_Start(&, XIN_REAL_Mode); 

	XIntc_Enable(&, ID); 

	XGpio_interrtuptenable(&btn,1); 
	XGpio_interrtuptGlobalenable(&btn);

}



#include "xgpio.h"

#include "xparameters.h"

#include "xintc.h"

#include "xuartlite.h"

#include "xil_printf.h" 


#define ID 


XGpio led, btn; 

XIntc int_ctrl; 

XUartLite uart; 

XUartLite_Config* cf; 


void btn_interrupt_handler(void* callback_ref) {

	XIntc_Acknowledge(&int_, ID); 

	XGpio_Interruptclear(&btn, 1); 

}


void main () {

// 


// Uart 
	cf = XUartLite_LoockUpConffig(ID); 
	XUartLite_initilaze(&uart, cf, 9600); 
	xil_printf(); 

INTERRUPT

	microblaze_enable_interrupts(); 

	XIntc_intinita(&int_, ID); 
	XIntc_Connect(&int_, ID, (XInterruptHandler)sdsafdsj, &btn; 
	XIntc_Start(int, XIN_REAL_MODE); 
	XIntc_Enable(&int_, ID); 

	
	XIntc_InterruptEnable(&int_, 1); 
}























17 làm python 

18 python 

19 python 

20 python 

21 pyhon 

22 tkhtn python

23 thi tkhtn đts

24 đts

25 thi mạng neuron đts

26 đts 

27 đts htvt 

28 htvt



2 thi đts 





































