output : chế độ push pull 
ghi 1 P-MOS hoạt động : P-MOS là trans nối với nguồn trong của con chip 
ghi 0 N-MOS hoạt động : N-MOS là trans nối mass trong con chip 
thế nên tùy cách mắc mạch ở ngoài thì nó sẽ có dòng chạy ra(vào) hoặc không 
nhưng có một thứ không đổi là việc hoạt động của P-MOS, N-MoS như đã ghi ở trên. 


input : chế độ push-up/ push dow. 
thì đầu tiên chọn mode input và push up/ push down
khi sử dụng làm input thì thanh ghi ODR sẽ dùng để config push up or push down cho pin 
ODR = 1 : pull up 
ODR = 0 : pull down 

- analogue trong input mode nó không chỉ dùng cho mỗi input mà nó có thể hiểu là chuyển chân đó sang analogue mode 
nó có thể dùng cho adc (input) và dac (output). dù dac trên thực tế là output thì việc cấu hình input để dùng analogue sẽ không 
ảnh hưởng đến, analogue sẽ không phân biệt in-out. còn việc gộp vào input là vì giới hạn về mặt tài nguyên của chip. ví dụ dòng 
H7 sẽ có thanh ghi mode riêng chứ không gộp như kia.

NOTE: khi sử dụng bit để cấu hình cho bất cứ thứ gì việc đầu tiên là cho nó trở về 0 đã rồi xử lý bit sau, mình đã chủ quan và không xem giá trị reset khi khởi chạy lại chưởng trình  dẫn đến xử lý bit sai => cấu hình sai và tốn quá nhiều thời gian cho việc tìm lỗi. 

--- Ngắt ngoài và 1 vài chú ý

về bản chất khi bị rung núp nhấn ko phải là sẽ có tín hiệu gửi đến ngắt nhiều lần và mk sẽ thực hiện từng đó mà bản chất muốn gửi tín hiệu ngắt thì bit pending phải đc set 
và gửi đến nvic, thế nên nếu viết như thường khi ngắt sẽ có nhiều xung nhiễu nhưng sau thực hiện xong một ngắt và clear bit pending thì lần tiếp theo mới làm bit pending trở lại và thực 
hiện ngắt chứ không phải tất xung nhiễu đó sẽ gửi yêu cầu ngắt thế nên ở trong hàm ngắt ta chỉ cần delay lại một xíu rồi mới clear bit pending và thoát hàm ngắt thì các tín hiệu nhiễu đó 
dù có nhưng cx sẽ ko có tác dụng và bit pending chưa trở về 0 để thực hiện lần ngắt tiếp theo và đoạn xung nhiễu đó sẽ bị trôi qua.